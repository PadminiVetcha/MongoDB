In mongodb atlas
  
## Connecting mongoDB Atlas with local mongoDB shell

C:\Users\padmini\mongodb-win32-x86_64-windows-4.4.4\bin>mongo "mongodb+srv://cluster0.a1tvq.mongodb.net/mongo_practice" --username PadminiVetcha
MongoDB shell version v4.4.4
Enter password:
connecting to: mongodb://cluster0-shard-00-00.a1tvq.mongodb.net:27017,cluster0-shard-00-01.a1tvq.mongodb.net:27017,cluster0-shard-00-02.a1tvq.mongodb.net:27017/mongo_practice?authSource=admin&compressors=disabled&gssapiServiceName=mongodb&replicaSet=atlas-11az9d-shard-0&ssl=true
Implicit session: session { "id" : UUID("410f8379-3c96-4151-aa59-59e195209103") }
MongoDB server version: 4.4.4

## Creating database and collections

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> show dbs
admin           0.000GB
local           3.561GB
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY>use mongo_practice
switched to db mongo_practice
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY>db.createCollection("movies")
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY>show collections
movies
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> show dbs
admin           0.000GB
local           3.561GB
mongo_practice  0.000GB
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> use mongo_practice
switched to db mongo_practice
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> show collections
movies

## inserting documents into collections

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"Fight Club","Writer":"Chuck Palahniuko","year":1999,"actors":["Brad Pitt","Edward Norton"]})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f4703eb5c9a104fea8b53")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find()
{ "_id" : ObjectId("604f4703eb5c9a104fea8b53"), "title" : "Fight Club", "Writer" : "Chuck Palahniuko", "year" : 1999, "actors" : [ "Brad Pitt", "Edward Norton" ] }
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find().pretty()
{
        "_id" : ObjectId("604f4703eb5c9a104fea8b53"),
        "title" : "Fight Club",
        "Writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"Pulp Fiction","Writer":"Quentin Tarantino","year":1994,"actors":["John Travolta","Uma Thurman"]})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f47a2eb5c9a104fea8b54")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"Inglorious Basterds","Writer":"Chuck Palahniuko","year":2009,"actors":["Brad Pitt","Diana Krugar","Eli Roth"]})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f4821eb5c9a104fea8b55")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"The Hobbit:An Unexpected Journey","Writer":"J.R.R.Tolkein","year":2012,"franchise":"The Hobbit"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f48c0eb5c9a104fea8b56")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"The Hobbit:The Desolation of Smaug","Writer":"J.R.R.Tolkein","year":2013,"franchise":"The Hobbit"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f490feb5c9a104fea8b57")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"The Hobbit:The Battle of the Five Armies","Writer":"J.R.R.Tolkein","year":2012,"franchise":"The Hobbit","synopsis":"Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f49c3eb5c9a104fea8b58")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"Pee Wee Herman's Big Adventure"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f49eaeb5c9a104fea8b59")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.insertOne({"title":"Avatar"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f49f7eb5c9a104fea8b5a")
}

##to find all documents

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find().pretty()
{
        "_id" : ObjectId("604f4703eb5c9a104fea8b53"),
        "title" : "Fight Club",
        "Writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("604f47a2eb5c9a104fea8b54"),
        "title" : "Pulp Fiction",
        "Writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
}
{
        "_id" : ObjectId("604f4821eb5c9a104fea8b55"),
        "title" : "Inglorious Basterds",
        "Writer" : "Chuck Palahniuko",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diana Krugar",
                "Eli Roth"
        ]
}
{
        "_id" : ObjectId("604f48c0eb5c9a104fea8b56"),
        "title" : "The Hobbit:An Unexpected Journey",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("604f490feb5c9a104fea8b57"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("604f49c3eb5c9a104fea8b58"),
        "title" : "The Hobbit:The Battle of the Five Armies",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness"
}
{
        "_id" : ObjectId("604f49eaeb5c9a104fea8b59"),
        "title" : "Pee Wee Herman's Big Adventure"
}
{ "_id" : ObjectId("604f49f7eb5c9a104fea8b5a"), "title" : "Avatar" }

## to get all the documents where writer set to "Quentin Tarantino"

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({"Writer":"Quentin Tarantino"}).pretty()
{
        "_id" : ObjectId("604f47a2eb5c9a104fea8b54"),
        "title" : "Pulp Fiction",
        "Writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
}




## Update docs



MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.update({"title":"The Hobbit:An Unexpected Journey"},{$set:{"synopsis":"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.update({"title":"The Hobbit:The Desolation of Smaug"},{$set:{"synopsis":"The dwarves,along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor,their homeland,from Smaug.Bilbo Baggins is in possession of a mysterious and magical ring."}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find()
{ "_id" : ObjectId("604f4703eb5c9a104fea8b53"), "title" : "Fight Club", "Writer" : "Chuck Palahniuko", "year" : 1999, "actors" : [ "Brad Pitt", "Edward Norton" ] }
{ "_id" : ObjectId("604f47a2eb5c9a104fea8b54"), "title" : "Pulp Fiction", "Writer" : "Quentin Tarantino", "year" : 1994, "actors" : [ "John Travolta", "Uma Thurman", "Samuel L.Jackson" ] }
{ "_id" : ObjectId("604f4821eb5c9a104fea8b55"), "title" : "Inglorious Basterds", "Writer" : "Chuck Palahniuko", "year" : 2009, "actors" : [ "Brad Pitt", "Diana Krugar", "Eli Roth" ] }
{ "_id" : ObjectId("604f48c0eb5c9a104fea8b56"), "title" : "The Hobbit:An Unexpected Journey", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug" }
{ "_id" : ObjectId("604f490feb5c9a104fea8b57"), "title" : "The Hobbit:The Desolation of Smaug", "Writer" : "J.R.R.Tolkein", "year" : 2013, "franchise" : "The Hobbit", "synopsis" : "The dwarves,along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor,their homeland,from Smaug.Bilbo Baggins is in possession of a mysterious and magical ring." }
{ "_id" : ObjectId("604f49c3eb5c9a104fea8b58"), "title" : "The Hobbit:The Battle of the Five Armies", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness" }

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({"title":"The Hobbit:An Unexpected Journey"}).pretty()
{
        "_id" : ObjectId("604f48c0eb5c9a104fea8b56"),
        "title" : "The Hobbit:An Unexpected Journey",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug"
}
## to get all the documents  where actors include "Brad Pitt"

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({"actors":"Brad Pitt"})
{ "_id" : ObjectId("604f4703eb5c9a104fea8b53"), "title" : "Fight Club", "Writer" : "Chuck Palahniuko", "year" : 1999, "actors" : [ "Brad Pitt", "Edward Norton" ] }
{ "_id" : ObjectId("604f4821eb5c9a104fea8b55"), "title" : "Inglorious Basterds", "Writer" : "Chuck Palahniuko", "year" : 2009, "actors" : [ "Brad Pitt", "Diana Krugar", "Eli Roth" ] }

## to find all the docs where franchise set to "The Hobbit"

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({"franchise":"The Hobbit"}).pretty()
{
        "_id" : ObjectId("604f48c0eb5c9a104fea8b56"),
        "title" : "The Hobbit:An Unexpected Journey",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("604f490feb5c9a104fea8b57"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit"
        "synopsis" : "The dwarves,along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor,their homeland,from Smaug.Bilbo Baggins is in possession of a mysterious and magical ring."
}
{
        "_id" : ObjectId("604f49c3eb5c9a104fea8b58"),
        "title" : "The Hobbit:The Battle of the Five Armies",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness"
}

## to get all the docs where movies released before the year 2000 and after 2010 

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({$or:[{"year":{"$lt":2000}},{"year":{"$gt":2010}}]})
{ "_id" : ObjectId("604f4703eb5c9a104fea8b53"), "title" : "Fight Club", "Writer" : "Chuck Palahniuko", "year" : 1999, "actors" : [ "Brad Pitt", "Edward Norton" ] }
{ "_id" : ObjectId("604f47a2eb5c9a104fea8b54"), "title" : "Pulp Fiction", "Writer" : "Quentin Tarantino", "year" : 1994, "actors" : [ "John Travolta", "Uma Thurman" ] }
{ "_id" : ObjectId("604f48c0eb5c9a104fea8b56"), "title" : "The Hobbit:An Unexpected Journey", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit" }
{ "_id" : ObjectId("604f490feb5c9a104fea8b57"), "title" : "The Hobbit:The Desolation of Smaug", "Writer" : "J.R.R.Tolkein", "year" : 2013, "franchise" : "The Hobbit" }
{ "_id" : ObjectId("604f49c3eb5c9a104fea8b58"), "title" : "The Hobbit:The Battle of the Five Armies", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness" }

## to get all the movies that are released in 90's

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({$and:[{"year":{"$gte":1900}},{"year":{"$lt":2000}}]})
{ "_id" : ObjectId("604f4703eb5c9a104fea8b53"), "title" : "Fight Club", "Writer" : "Chuck Palahniuko", "year" : 1999, "actors" : [ "Brad Pitt", "Edward Norton" ] }
{ "_id" : ObjectId("604f47a2eb5c9a104fea8b54"), "title" : "Pulp Fiction", "Writer" : "Quentin Tarantino", "year" : 1994, "actors" : [ "John Travolta", "Uma Thurman" ] }
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY>


##Update docs

1.add synopsis

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.update({"title":"The Hobbit:An Unexpected Journey"},{$set:{"synopsis":"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({"title":"The Hobbit:An Unexpected Journey"}).pretty()
{
        "_id" : ObjectId("604f48c0eb5c9a104fea8b56"),
        "title" : "The Hobbit:An Unexpected Journey",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug"
}

2. add synopsis

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.update({"title":"The Hobbit:The Desolation Of Smaug"},{$set:{"synopsis":"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland,from Smaug.Bilbo Baggins is in possession of a mysterious and magical ring"}})
WriteResult({ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 })
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({"title":"The Hobbit:The Desolation of Smaug"}).pretty()
{
        "_id" : ObjectId("604f490feb5c9a104fea8b57"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "Writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit"
}

3. to add an actor Samuel L.Jackson

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.update({"title":"Pulp Fiction"},{$push:{"actors":"Samuel L.Jackson"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({"title":"Pulp Fiction"}).pretty()
{
        "_id" : ObjectId("604f47a2eb5c9a104fea8b54"),
        "title" : "Pulp Fiction",
        "Writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman",
                "Samuel L.Jackson"
        ]
}

##Deleting docs
1.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.remove({"title":"Avatar"})
WriteResult({ "nRemoved" : 1 })
2.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.remove({"title":"Pee Wee Herman's Big Adventure"})
WriteResult({ "nRemoved" : 1 })

## Text search

1.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({synopsis:/Bilbo/g})
{ "_id" : ObjectId("604f48c0eb5c9a104fea8b56"), "title" : "The Hobbit:An Unexpected Journey", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug" }
{ "_id" : ObjectId("604f49c3eb5c9a104fea8b58"), "title" : "The Hobbit:The Battle of the Five Armies", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness" }

2.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({synopsis:/Gandalf/g})
{ "_id" : ObjectId("604f490feb5c9a104fea8b57"), "title" : "The Hobbit:The Desolation of Smaug", "Writer" : "J.R.R.Tolkein", "year" : 2013, "franchise" : "The Hobbit", "synopsis" : "The dwarves,along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor,their homeland,from Smaug.Bilbo Baggins is in possession of a mysterious and magical ring." }

3.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({$and:[{synopsis:/Bilbo/g},{synopsis:{$not:/Gandalf/g}}]})
{ "_id" : ObjectId("604f48c0eb5c9a104fea8b56"), "title" : "The Hobbit:An Unexpected Journey", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug" }
{ "_id" : ObjectId("604f49c3eb5c9a104fea8b58"), "title" : "The Hobbit:The Battle of the Five Armies", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness" }

4.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({$or:[{synopsis:/dwarves/g},{synopsis:/hobbit/g}]})
{ "_id" : ObjectId("604f48c0eb5c9a104fea8b56"), "title" : "The Hobbit:An Unexpected Journey", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug" }
{ "_id" : ObjectId("604f490feb5c9a104fea8b57"), "title" : "The Hobbit:The Desolation of Smaug", "Writer" : "J.R.R.Tolkein", "year" : 2013, "franchise" : "The Hobbit", "synopsis" : "The dwarves,along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor,their homeland,from Smaug.Bilbo Baggins is in possession of a mysterious and magical ring." }

5.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.movies.find({$and:[{synopsis:/gold/g},{synopsis:/dragon/g}]})
{ "_id" : ObjectId("604f48c0eb5c9a104fea8b56"), "title" : "The Hobbit:An Unexpected Journey", "Writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it-from the dragon Smaug" }


##Creating users collection

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> show collections
movies
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.createCollection("users")
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1615816292, 1),
                "signature" : {
                        "hash" : BinData(0,"JjuitWM3nUQ1ot7yeF+IgrFxE+E="),
                        "keyId" : NumberLong("6893598221487046660")
                }
        },
        "operationTime" : Timestamp(1615816292, 1)
}

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> show collections
movies
users

##Insertion 

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.users.insertOne({"username":"GoodGuyGreg","first_name":"Good Guy","last_name":" Greg"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6782eb5c9a104fea8b5b")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.users.insertOne({"username":"ScumbagSteve","full_name":[{"first":"Scumbag"},{"last":" Steve"}]})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6867eb5c9a104fea8b5c")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.users.find().pretty()
{
        "_id" : ObjectId("604f6782eb5c9a104fea8b5b"),
        "username" : "GoodGuyGreg",
        "first_name" : "Good Guy",
        "last_name" : " Greg"
}
{
        "_id" : ObjectId("604f6867eb5c9a104fea8b5c"),
        "username" : "ScumbagSteve",
        "full_name" : [
                {
                        "first" : "Scumbag"
                },
                {
                        "last" : " Steve"
                }
        ]
}


##Create posts collection

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> show collections
movies
users
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.createCollection("posts")
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1615817320, 3),
                "signature" : {
                        "hash" : BinData(0,"BVe8/TIm3+xVAXK40aYDSQ7fIW0="),
                        "keyId" : NumberLong("6893598221487046660")
                }
        },
        "operationTime" : Timestamp(1615817320, 2)
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.insertOne({"username":"GoodGuyGreg","title":"Passes out at party","body":"Wakes up early and cleanes house"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6ab2eb5c9a104fea8b5d")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> show collections
movies
posts
users

##insertion

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.insertOne({"username":"GoodGuyGreg","title":"Steals your identity","body":"Raises your credit score"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6b15eb5c9a104fea8b5e")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.insertOne({"username":"GoodGuyGreg","title":"Reports a bug in your code","body":"Sends you a Pull Request"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6b3eeb5c9a104fea8b5f")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.insertOne({"username":"ScumbagSteve","title":"Borrows something","body":"Sells it"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6b7feb5c9a104fea8b60")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.insertOne({"username":"ScumbagSteve","title":"Borrows everything","body":"The end"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6ba3eb5c9a104fea8b61")
}
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.insertOne({"username":"ScumbagSteve","title":"Forks your repo on github","body":"Sets to private"})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("604f6bc1eb5c9a104fea8b62")
}

## create comments collection

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.createCollection("comments")
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1615818008, 19),
                "signature" : {
                        "hash" : BinData(0,"lVR3wBPb5T68ImJtjEgxnOLTjQA="),
                        "keyId" : NumberLong("6893598221487046660")
                }
        },
        "operationTime" : Timestamp(1615818008, 14)
}

##insertion

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.insert({"username":"GoodGuyGreg","comment":"Hope you got a good deal!","post":"604f6bc1eb5c9a104fea8b60"})
WriteResult({ "nInserted" : 1 })
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.insert({"username":"GoodGuyGreg","comment":"What's mine is yours!","post":"604f6bc1eb5c9a104fea8b61"})
WriteResult({ "nInserted" : 1 })
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.insert({"username":"GoodGuyGreg","comment":"Don't violate the licensing agreement!","post":"604f6bc1eb5c9a104fea8b62"})
WriteResult({ "nInserted" : 1 })
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.insert({"username":"ScumbagSteve","comment":"It stillisn't clean","post":"604f6bc1eb5c9a104fea8b5d"})
WriteResult({ "nInserted" : 1 })
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.insert({"username":"ScumbagSteve","comment":"Denied your PR cause I found a hack","post":"604f6bc1eb5c9a104fea8b5f"})
WriteResult({ "nInserted" : 1 })

##Queries related to find

1.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.users.find().pretty()
{
        "_id" : ObjectId("604f6782eb5c9a104fea8b5b"),
        "username" : "GoodGuyGreg",
        "first_name" : "Good Guy",
        "last_name" : " Greg"
}
{
        "_id" : ObjectId("604f6867eb5c9a104fea8b5c"),
        "username" : "ScumbagSteve",
        "full_name" : [
                {
                        "first" : "Scumbag"
                },
                {
                        "last" : " Steve"
                }
        ]
}

2.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.find().pretty()
{
        "_id" : ObjectId("604f6ab2eb5c9a104fea8b5d"),
        "username" : "GoodGuyGreg",
        "title" : "Passes out at party",
        "body" : "Wakes up early and cleanes house"
}
{
        "_id" : ObjectId("604f6b15eb5c9a104fea8b5e"),
        "username" : "GoodGuyGreg",
        "title" : "Steals your identity",
        "body" : "Raises your credit score"
}
{
        "_id" : ObjectId("604f6b3eeb5c9a104fea8b5f"),
        "username" : "GoodGuyGreg",
        "title" : "Reports a bug in your code",
        "body" : "Sends you a Pull Request"
}
{
        "_id" : ObjectId("604f6b7feb5c9a104fea8b60"),
        "username" : "ScumbagSteve",
        "title" : "Borrows something",
        "body" : "Sells it"
}
{
        "_id" : ObjectId("604f6ba3eb5c9a104fea8b61"),
        "username" : "ScumbagSteve",
        "title" : "Borrows everything",
        "body" : "The end"
}
{
        "_id" : ObjectId("604f6bc1eb5c9a104fea8b62"),
        "username" : "ScumbagSteve",
        "title" : "Forks your repo on github",
        "body" : "Sets to private"
}

3.all the posts by GoodGuyGreg

MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.find({"username":"GoodGuyGreg"})
{ "_id" : ObjectId("604f6ab2eb5c9a104fea8b5d"), "username" : "GoodGuyGreg", "title" : "Passes out at party", "body" : "Wakes up early and cleanes house" }
{ "_id" : ObjectId("604f6b15eb5c9a104fea8b5e"), "username" : "GoodGuyGreg", "title" : "Steals your identity", "body" : "Raises your credit score" }
{ "_id" : ObjectId("604f6b3eeb5c9a104fea8b5f"), "username" : "GoodGuyGreg", "title" : "Reports a bug in your code", "body" : "Sends you a Pull Request" }

4.all the posts by ScumbagSteve
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.posts.find({"username":"ScumbagSteve"})
{ "_id" : ObjectId("604f6b7feb5c9a104fea8b60"), "username" : "ScumbagSteve", "title" : "Borrows something", "body" : "Sells it" }
{ "_id" : ObjectId("604f6ba3eb5c9a104fea8b61"), "username" : "ScumbagSteve", "title" : "Borrows everything", "body" : "The end" }
{ "_id" : ObjectId("604f6bc1eb5c9a104fea8b62"), "username" : "ScumbagSteve", "title" : "Forks your repo on github", "body" : "Sets to private" }

5.
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.find().pretty()
{
        "_id" : ObjectId("604f6e08eb5c9a104fea8b63"),
        "username" : "GoodGuyGreg",
        "comment" : "Hope you got a good deal!",
        "post" : "604f6bc1eb5c9a104fea8b60"
}
{
        "_id" : ObjectId("604f6e30eb5c9a104fea8b64"),
        "username" : "GoodGuyGreg",
        "comment" : "What's mine is yours!",
        "post" : "604f6bc1eb5c9a104fea8b61"
}
{
        "_id" : ObjectId("604f6e65eb5c9a104fea8b65"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : "604f6bc1eb5c9a104fea8b62"
}
{
        "_id" : ObjectId("604f6ebbeb5c9a104fea8b66"),
        "username" : "ScumbagSteve",
        "comment" : "It still isn't clean",
        "post" : "604f6bc1eb5c9a104fea8b5d"
}
{
        "_id" : ObjectId("604f6f07eb5c9a104fea8b67"),
        "username" : "ScumbagSteve",
        "comment" : "Denied your PR cause I found a hack",
        "post" : "604f6bc1eb5c9a104fea8b5f"
}

6.all the comments authorized by GoodGuyGreg
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.find({"username":"GoodGuyGreg"})
{ "_id" : ObjectId("604f6e08eb5c9a104fea8b63"), "username" : "GoodGuyGreg", "comment" : "Hope you got a good deal!", "post" : "604f6bc1eb5c9a104fea8b60" }
{ "_id" : ObjectId("604f6e30eb5c9a104fea8b64"), "username" : "GoodGuyGreg", "comment" : "What's mine is yours!", "post" : "604f6bc1eb5c9a104fea8b61" }
{ "_id" : ObjectId("604f6e65eb5c9a104fea8b65"), "username" : "GoodGuyGreg", "comment" : "Don't violate the licensing agreement!", "post" : "604f6bc1eb5c9a104fea8b62" }
 
7.all the comments authorized by ScumbagSteve
MongoDB Enterprise atlas-11az9d-shard-0:PRIMARY> db.comments.find({"username":"ScumbagSteve"})
{ "_id" : ObjectId("604f6ebbeb5c9a104fea8b66"), "username" : "ScumbagSteve", "comment" : "It still isn't clean", "post" : "604f6bc1eb5c9a104fea8b5d" }
{ "_id" : ObjectId("604f6f07eb5c9a104fea8b67"), "username" : "ScumbagSteve", "comment" : "Denied your PR cause I found a hack", "post" : "604f6bc1eb5c9a104fea8b5f" }

8.


